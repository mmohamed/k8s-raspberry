apiVersion: v1
kind: Namespace
metadata:
  name: keycloak

---
apiVersion: v1
kind: Secret
metadata:
  name: administrator-account
  namespace: keycloak
type: Opaque
data:
  username: {{username}}
  password: {{password}}

---
apiVersion: v1
kind: Secret
metadata:
  name: keycloak-tls
  namespace: keycloak
data:
  tls.crt: {{crt}}
  tls.key: {{key}}
type: kubernetes.io/tls

---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: keycloak-pvc
  namespace: keycloak
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 500Mi

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
  name: keycloak
  namespace: keycloak
  labels:
    app: keycloak
spec:
  rules:
    - host: {{host}}
      http:
        paths:
          - backend:
              serviceName: keycloak-service
              servicePort: http
            path: /
  tls:
    - hosts:
      - {{host}}
      secretName: keycloak-tls

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak
  namespace: keycloak
  labels:
    app: keycloak
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keycloak
  template:
    metadata:
      labels:
        app: keycloak
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
                - arm64
      containers:
      - name: keycloak
        image: medinvention/keycloak:12.0.1
        env:
        - name: KEYCLOAK_FRONTEND_URL
          value: 'https://{{host}}/auth'
        - name: KEYCLOAK_USER
          valueFrom:
            secretKeyRef:
              name: administrator-account
              key: username
        - name: KEYCLOAK_PASSWORD
          valueFrom:
            secretKeyRef:
              name: administrator-account
              key: password
        ports:
        - containerPort: 8080
          name: user-console
        - containerPort: 9990
          name: admin-console
        volumeMounts:
        - mountPath: /opt/jboss/keycloak/standalone/data
          name: h2-data
      volumes:
        - name: h2-data
          persistentVolumeClaim:
            claimName: keycloak-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: keycloak-service
  namespace: keycloak
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8080
  selector:
    app: keycloak
