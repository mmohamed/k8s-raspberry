apiVersion: v1
kind: Namespace
metadata:
  name: blog

---
apiVersion: v1
kind: Secret
metadata:
  name: blog-tls
  namespace: blog
data:
  tls.key: {{key}}
  tls.crt: {{crt}}
type: kubernetes.io/tls

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: 8m
  name: blog
  namespace: blog
  labels:
    app: ghost
spec:
  rules:
    - host: {{host}}
      http:
        paths:
          - backend:
              serviceName: blog-service
              servicePort: http
            path: /
  tls:
    - hosts:
      - {{host}}
      secretName: blog-tls

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ghost-config
  namespace: blog
data:
  config.production.json: |
    {
        "url": "http://{{host}}",
        "server": {
          "port": 2368,
          "host": "0.0.0.0"
        },
        "database": {
            "client": "mysql",
            "connection": {
                "host"     : "mysql.blog.svc.cluster.local",
                "user"     : "ghost",
                "password" : "ghost",
                "database" : "ghost"
            }
        },
        "mail": {
            "transport": "SMTP",
            "options": {
                "service": "****",
                "auth": {
                    "user": "*****",
                    "pass": "*****"
                }
            }
        },
        "logging": {
            "level": "info",
            "transports": ["stdout"]
        }
    }

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ghost
  namespace: blog
  labels:
    app: ghost
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ghost
  template:
    metadata:
      labels:
        app: ghost
    spec:
      containers:
      - name: ghost
        image: ghost:3.11.0
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            memory: "0"
            cpu: "0"
          limits:
            memory: "192Mi"
            cpu: "250m"
        ports:
        - containerPort: 2368
        volumeMounts:
        - mountPath: /var/lib/ghost/config.production.json
          subPath: config.production.json
          name: prod-conf  
      volumes:
        - name: prod-conf
          configMap:
            name: ghost-config

---
apiVersion: v1
kind: Service
metadata:
  name: blog-service
  namespace: blog
spec:
  ports:
  - name: http
    port: 80
    targetPort: 2368
  selector:
    app: ghost